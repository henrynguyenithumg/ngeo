{"version":3,"sources":["webpack:///./contribs/gmf/examples/profile.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js"],"names":["__webpack_require__","exports","module","angular","_Permalink2","default","name","_component2","_module2","_module4","value","constant","MainController","$scope","ngeoFeatureOverlayMgr","this","profileLine","profileLinesconfiguration","aster","color","srtm","profileOptions","styleDefs","map","_Map2","layers","_Tile2","source","_OSM2","view","_View2","projection","resolutions","center","zoom","lineStyle","_Style2","stroke","_Stroke2","width","features","_Collection2","overlay","getFeatureOverlay","setFeatures","setStyle","init","drawLine","_Draw2","type","setActive","addInteraction","toggleDrawLineActive","getActive","clear_","clear","on","e","feature","getGeometry","$digest","controller","XYZ","opt_options","options","undefined","tileGrid","Object","tilegrid","extent","maxZoom","minZoom","tileSize","TileImage","call","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","wrapX","transition","ol","source_XYZ","OSM","ATTRIBUTION","__webpack_exports__"],"mappings":"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","file":"profile.534d3e8418c1aadf4621.js","sourcesContent":["/**\n * @module gmfapp.profile\n */\nconst exports = {};\n\nimport './profile.css';\n/** @suppress {extraRequire} */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfProfileModule from 'gmf/profile/module.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport EPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  'gettext',\n  gmfPermalinkPermalink.module.name,\n  gmfMapComponent.name,\n  gmfProfileModule.name,\n  ngeoMapModule.name // for ngeo.map.FeatureOverlay, perhaps remove me\n]);\n\n\nexports.module.value(\n  'gmfProfileJsonUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/profile.json');\n\nexports.module.constant('defaultTheme', 'Demo');\nexports.module.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {angular.Scope} $scope Angular scope.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n * @ngInject\n */\nexports.MainController = function($scope, ngeoFeatureOverlayMgr) {\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.profileLine = null;\n\n  /**\n   * @type {Object.<string, gmfx.ProfileLineConfiguration>}\n   * @export\n   */\n  this.profileLinesconfiguration = {\n    'aster': {\n      'color': '#0404A0'\n    },\n    'srtm': {\n      'color': '#04A004'\n    }\n  };\n\n  this.profileOptions = {\n    styleDefs: 'svg {background-color: #D3E5D7};'\n  };\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: EPSG21781,\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [600000, 200000],\n      zoom: 3\n    })\n  });\n\n  const lineStyle = new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: '#ffcc33',\n      width: 2\n    })\n  });\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const features = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(features);\n  overlay.setStyle(lineStyle);\n\n\n  // Initialize the feature overlay manager with the map.\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * Draw line interaction.\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawLine = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    features: features\n  });\n\n  this.drawLine.setActive(false);\n  this.map.addInteraction(this.drawLine);\n\n  /**\n   * Toggle activation of the draw line interaction.\n   * @export\n   */\n  this.toggleDrawLineActive = function() {\n    if (this.drawLine.getActive()) {\n      this.drawLine.setActive(false);\n      this.clear_();\n    } else {\n      this.drawLine.setActive(true);\n    }\n  };\n\n  this.clear_ = function() {\n    features.clear(); // For the draw overlay.\n    this.profileLine = null; // To reset the profile.\n  };\n\n  this.drawLine.on('drawstart', function() {\n    this.clear_();\n  }, this);\n\n  this.drawLine.on('drawend', function(e) {\n    // Update the profile with the new geometry\n    this.profileLine = e.feature.getGeometry();\n    $scope.$digest();\n  }, this);\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/profile.js","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = "],"sourceRoot":""}