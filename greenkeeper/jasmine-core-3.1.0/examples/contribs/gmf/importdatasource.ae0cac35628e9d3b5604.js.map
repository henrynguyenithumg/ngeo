{"version":3,"sources":["webpack:///./contribs/gmf/examples/importdatasource.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js"],"names":["__webpack_require__","exports","module","angular","_Manager2","default","name","_importdatasourceComponent2","_component2","_TreeManager2","_component4","_Themes2","_DataSources2","_bboxQueryComponent2","_mapQueryComponent2","value","type","url","constant","MainController","_class","$scope","gmfDataSourcesManager","gmfThemes","gmfTreeManager","ngeoDataSources","_this","this","_classCallCheck","scope_","loadThemes","map","_Map2","layers","_Tile2","source","_OSM2","view","_View2","projection","resolutions","center","zoom","setDatasourceMap","getThemesObject","then","themes","i","ii","length","id","setFirstLevelGroups","children","queryActive","$","tooltip","container","trigger","$inject","controller","XYZ","opt_options","options","undefined","tileGrid","Object","tilegrid","extent","maxZoom","minZoom","tileSize","TileImage","call","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","ol","source_XYZ","OSM","ATTRIBUTION","__webpack_exports__"],"mappings":"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","file":"importdatasource.ae0cac35628e9d3b5604.js","sourcesContent":["/**\n * @module gmfapp.importdatasource\n */\nconst exports = {};\n// Todo - use the 'Filter' theme instead if the 'Edit' theme\n\nimport './importdatasource.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\n\nimport gmfImportImportdatasourceComponent from 'gmf/import/importdatasourceComponent.js';\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\n/** @suppress {extraRequire} */\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent.js';\n\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport EPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfDatasourceManager.module.name,\n  gmfImportImportdatasourceComponent.name,\n  gmfLayertreeComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfMapComponent.name,\n  gmfThemeThemes.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryBboxQueryComponent.name,\n  ngeoQueryMapQueryComponent.name,\n]);\n\n\nexports.module.value('gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?version=2&background=background');\n\nexports.module.value('gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?version=2&background=background');\n\n\nexports.module.value('gmfLayersUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/layers/');\n\nexports.module.value('gmfExternalOGCServers', [{\n  'name': 'Swiss Topo WMS',\n  'type': 'WMS',\n  'url': 'https://wms.geo.admin.ch/?lang=fr'\n}, {\n  'name': 'ASIT VD',\n  'type': 'WMTS',\n  'url': 'https://ows.asitvd.ch/wmts/1.0.0/WMTSCapabilities.xml'\n}, {\n  'name': 'Swiss Topo WMTS',\n  'type': 'WMTS',\n  'url': 'https://wmts.geo.admin.ch/1.0.0/WMTSCapabilities.xml?lang=fr'\n}]);\n\nexports.constant('defaultTheme', 'Filters');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\nexports.MainController = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {gmf.datasource.Manager} gmfDataSourcesManager The gmf\n   *     data sources manager service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @ngInject\n   */\n  constructor($scope, gmfDataSourcesManager, gmfThemes, gmfTreeManager,\n    ngeoDataSources\n  ) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    gmfThemes.loadThemes();\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @export\n     */\n    this.gmfTreeManager = gmfTreeManager;\n\n    /**\n     * @type {ol.Map}\n     * @export\n     */\n    this.map = new olMap({\n      layers: [\n        new olLayerTile({\n          source: new olSourceOSM()\n        })\n      ],\n      view: new olView({\n        projection: EPSG21781,\n        resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n        center: [537635, 152640],\n        zoom: 2\n      })\n    });\n\n    // Init the datasources with our map.\n    gmfDataSourcesManager.setDatasourceMap(this.map);\n\n    gmfThemes.getThemesObject().then((themes) => {\n      if (themes) {\n        // Set 'Filters' theme, i.e. the one with id 175\n        for (let i = 0, ii = themes.length; i < ii; i++) {\n          if (themes[i].id === 175) {\n            this.gmfTreeManager.setFirstLevelGroups(themes[i].children);\n            break;\n          }\n        }\n      }\n    });\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.queryActive = true;\n\n    // initialize tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip({\n      container: 'body',\n      trigger: 'hover'\n    });\n\n  }\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/importdatasource.js","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = "],"sourceRoot":""}