{"version":3,"sources":["webpack:///./src/interaction/MobileDraw.js","webpack:///./contribs/gmf/examples/mobilemeasure.js","webpack:///./contribs/gmf/src/mobile/measure/lengthComponent.js","webpack:///./src/interaction/MeasureLengthMobile.js","webpack:///./contribs/gmf/src/mobile/measure/lengthComponent.html","webpack:///./contribs/gmf/src/mobile/measure/pointComponent.js","webpack:///./src/interaction/MeasurePointMobile.js","webpack:///./contribs/gmf/src/mobile/measure/pointComponent.html","webpack:///./node_modules/openlayers/src/ol/control/ScaleLineUnits.js","webpack:///./node_modules/openlayers/src/ol/control/ScaleLine.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js"],"names":["__webpack_require__","olBase","olEvents","olFunctions","exports","options","_Interaction2","default","call","this","handleEvent","TRUE","changeEventKey_","type_","type","minPoints_","minPoints","sketchFeature_","sketchPoints_","sketchPoint_","overlay_","_Vector2","source","_Vector4","useSpatialIndex","wrapX","style","_Draw2","getDefaultStyleFunction","updateWhileAnimating","updateWhileInteracting","listen","updateState_","set","inherits","prototype","setMap","map","getMap","unlistenByKey","getView","handleViewCenterChange_","getDirty","get","getDrawing","getValid","getFeature","addToDrawing","active","getActive","drawing","sketchFeatureGeom","coordinate","getSketchPointGeometry_","getCoordinates","coordinates","_Feature2","_Point2","dispatchEvent","Event","getGeometry","_asserts2","assertInstanceof","_SimpleGeometry2","setCoordinates","push","slice","_LineString2","valid","length","updateSketchFeatures_","clearDrawing","setActive","finishDrawing","startDrawing_","createOrUpdateSketchPoint_","modifyDrawing_","center","getCenter_","pop","abortDrawing_","sketchFeature","getSource","clear","evt","sketchFeatures","overlaySource","addFeatures","assert","geometry","getCenter","assertArray","module","angular","_component2","name","_Permalink2","_lengthComponent2","_pointComponent2","_btnComponent2","value","constant","MainController","gmfPermalink","getMapCenter","zoom","getMapZoom","_Map2","layers","_Tile2","_OSM2","view","_View2","projection","resolutions","addControl","_ScaleLine2","measureLengthActive","measurePointLayersConfig","aster","unit","decimals","srtm","measurePointActive","controller","_filters2","element","attrs","templateUrl","undefined","run","$templateCache","put","component_","gmfMobileMeasureLengthTemplateUrl","restrict","scope","precision","sketchStyle","bindToController","link","init","directive","Controller_","$scope","$filter","_this","scope_","filter_","$watch","newVal","measure","_Style2","fill","_Fill2","color","stroke","_Stroke2","lineDash","width","image","_RegularShape2","points","radius","radius2","angle","drawInteraction","dirty","_MeasureLengthMobile2","_decorate2","interaction","getDrawInteraction","Object","defineProperty","_Object2","getChangeEventType","$apply","addInteraction","addPoint","finish","deactivate","format","opt_options","obj","assign","displayHelpTooltip","_MeasureLength2","createDrawInteraction","_MobileDraw2","_RasterService2","_debounce2","gmfMobileMeasurePointTemplateUrl","getCoordinateDecimalsFn","getLayersConfigFn","gettextCatalog","gmfRaster","ngeoDebounce","gmfRaster_","ngeoDebounce_","gettextCatalog_","$filter_","handleMeasureActiveChange_","coordinateDecimalsFn","coordinateDecimals","layersConfig","mapViewPropertyChangeEventKey_","_MeasurePointMobile2","Array","isArray","translate","str","getString","getMeasure_","bind","_this2","params","config","join","getRaster","then","object","el","getTooltipElement","ctn","document","createElement","className","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","key","childEl","innerHTML","appendChild","err","return","previousCtn","getElementsByClassName","remove","LayerConfig","olObj","coordFormat","arguments","_Measure2","format_","coordFormat_","handleMeasure","callback","geom","dec","getFormattedPoint","getLastCoordinate","ScaleLineUnits","__webpack_exports__","render","LEADING_DIGITS","ScaleLine","innerElement_","element_","css","viewState_","minWidth_","minWidth","renderedVisible_","renderedWidth_","renderedHTML_","Control","target","events","ol_Object","handleUnitsChanged_","setUnits","mapEvent","frameState","viewState","updateElement_","ol","getUnits","units","display","pointResolutionUnits","Units","DEGREES","METERS","pointResolution","proj","resolution","getMetersPerUnit","nominalCount","suffix","metersPerDegree","asserts","count","i","Math","floor","log","pow","round","isNaN","html","XYZ","tileGrid","tilegrid","extent","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","transition","source_XYZ","OSM","ATTRIBUTION"],"mappings":"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","file":"mobilemeasure.9f0b71cfc4b60d66d891.js","sourcesContent":["/**\n * @module ngeo.interaction.MobileDraw\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomSimpleGeometry from 'ol/geom/SimpleGeometry.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries from a mobile device using the\n * center of the map view as entry for points added.\n *\n * Supports:\n * - point\n * - line string\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ol.interaction.Interaction}\n * @param {ngeox.interaction.MobileDrawOptions} options Options\n */\nconst exports = function(options) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n  /**\n   * The key for view center change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = options.type;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.type_ === 'Polygon' ? 3 : 2);\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Previous sketch points, saved to be able to display them on the layer.\n   * @type {Array.<ol.Feature>}\n   * @private\n   */\n  this.sketchPoints_ = [];\n\n  /**\n   * Current sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      olInteractionDraw.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    if (this.changeEventKey_) {\n      olEvents.unlistenByKey(this.changeEventKey_);\n    }\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.changeEventKey_ = olEvents.listen(map.getView(),\n      'change:center',\n      this.handleViewCenterChange_, this);\n  }\n\n  this.updateState_();\n};\n\n\n// === PUBLIC METHODS - PROPERTY GETTERS ===\n\n\n/**\n * Return whether the interaction is currently dirty. It is if the sketch\n * feature has its geometry last coordinate set to the center without the\n * use of the `addToDrawing` method.\n * @return {boolean} `true` if the interaction is dirty, `false` otherwise.\n * @observable\n */\nexports.prototype.getDirty = function() {\n  return /** @type {boolean} */ (\n    this.get('dirty'));\n};\n\n\n/**\n * Return whether the interaction is currently drawing.\n * @return {boolean} `true` if the interaction is drawing, `false` otherwise.\n * @observable\n */\nexports.prototype.getDrawing = function() {\n  return /** @type {boolean} */ (\n    this.get('drawing'));\n};\n\n\n/**\n * Return whether the interaction as a valid sketch feature, i.e. its geometry\n * is valid.\n * @return {boolean} `true` if the interaction has a valid sketch feature,\n *     `false` otherwise.\n * @observable\n */\nexports.prototype.getValid = function() {\n  return /** @type {boolean} */ (\n    this.get('valid'));\n};\n\n\n/**\n * Returns the current sketch feature.\n * @return {?ol.Feature} The sketch feature, or null if none.\n */\nexports.prototype.getFeature = function() {\n  return this.sketchFeature_;\n};\n\n\n// === PUBLIC METHODS ===\n\n\n/**\n * Add current sketch point to sketch feature if the latter exists, else create\n * it.\n */\nexports.prototype.addToDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  let sketchFeatureGeom;\n  const sketchPointGeom = this.getSketchPointGeometry_();\n  const coordinate = sketchPointGeom.getCoordinates();\n  let coordinates;\n\n  // == point ==\n  if (this.type_ === 'Point') {\n    if (!this.sketchFeature_) {\n      this.sketchFeature_ = new olFeature(new olGeomPoint(coordinate));\n      this.dispatchEvent(new olInteractionDraw.Event(\n        /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n    }\n    sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    sketchFeatureGeom.setCoordinates(coordinate);\n    return;\n  }\n\n  // == line string ==\n  if (this.type_ === 'LineString') {\n    this.sketchPoints_.push(this.sketchPoint_);\n    if (!this.sketchFeature_) {\n      coordinates = [coordinate.slice(), coordinate.slice()];\n      this.sketchFeature_ = new olFeature(new olGeomLineString(coordinates));\n      this.dispatchEvent(new olInteractionDraw.Event(\n        /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n    } else {\n      sketchFeatureGeom = this.sketchFeature_.getGeometry();\n      googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n      coordinates = sketchFeatureGeom.getCoordinates();\n      coordinates.push(coordinate.slice());\n      sketchFeatureGeom.setCoordinates(coordinates);\n    }\n  }\n\n  const dirty = this.getDirty();\n  if (dirty) {\n    this.set('dirty', false);\n  }\n\n  // minPoints validation\n  const valid = this.getValid();\n  if (this.type_ === 'LineString') {\n    if (coordinates.length >= this.minPoints_) {\n      if (!valid) {\n        this.set('valid', true);\n      }\n    } else {\n      if (valid) {\n        this.set('valid', false);\n      }\n    }\n  }\n\n  // reset sketch point\n  this.sketchPoint_ = null;\n\n  // update sketch features\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Clear the drawing\n */\nexports.prototype.clearDrawing = function() {\n  this.setActive(false);\n  this.setActive(true);\n};\n\n\n/**\n * Finish drawing. If there's a sketch point, it's added first.\n */\nexports.prototype.finishDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  if (this.sketchPoint_) {\n    this.addToDrawing();\n  }\n\n  this.set('drawing', false);\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), this.sketchFeature_));\n};\n\n\n// === PRIVATE METHODS ===\n\n\n/**\n * Start drawing by adding the sketch point first.\n * @private\n */\nexports.prototype.startDrawing_ = function() {\n  this.set('drawing', true);\n  this.createOrUpdateSketchPoint_();\n  this.updateSketchFeatures_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  }\n};\n\n\n/**\n * Modify the geometry of the sketch feature to have its last coordinate\n * set to the center of the map.\n * @private\n */\nexports.prototype.modifyDrawing_ = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n\n  const center = this.getCenter_();\n\n  if (this.type_ === 'LineString') {\n    const sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    const coordinates = sketchFeatureGeom.getCoordinates();\n    coordinates.pop();\n    coordinates.push(center);\n    sketchFeatureGeom.setCoordinates(coordinates);\n  }\n\n  const dirty = this.getDirty();\n  if (!dirty) {\n    this.set('dirty', true);\n  }\n\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {?ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature || this.sketchPoints_.length > 0) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  this.sketchPoints_ = [];\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n  return sketchFeature;\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  } else {\n    this.startDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.prototype.handleViewCenterChange_ = function(evt) {\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  this.createOrUpdateSketchPoint_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  } else {\n    this.modifyDrawing_();\n    this.updateSketchFeatures_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function() {\n  const center = this.getCenter_();\n\n  if (this.sketchPoint_) {\n    const geometry = this.getSketchPointGeometry_();\n    geometry.setCoordinates(center);\n  } else {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(center));\n  }\n\n};\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n  overlaySource.addFeatures(this.sketchPoints_);\n};\n\n\n/**\n * Returns the geometry of the sketch point feature.\n * @return {ol.geom.Point} Point.\n * @private\n */\nexports.prototype.getSketchPointGeometry_ = function() {\n  googAsserts.assert(this.sketchPoint_, 'sketch point should be thruty');\n  const geometry = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  return geometry;\n};\n\n\n/**\n * Returns the center of the map view\n * @return {ol.Coordinate} Coordinate.\n * @private\n */\nexports.prototype.getCenter_ = function() {\n  const center = this.getMap().getView().getCenter();\n  googAsserts.assertArray(center);\n  return center;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MobileDraw.js","/**\n * @module gmfapp.mobilemeasure\n */\nconst exports = {};\n\nimport './mobilemeasure.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\nimport gmfMobileMeasureLengthComponent from 'gmf/mobile/measure/lengthComponent.js';\nimport gmfMobileMeasurePointComponent from 'gmf/mobile/measure/pointComponent.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport EPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfMapComponent.name,\n  gmfPermalinkPermalink.module.name,\n  gmfMobileMeasureLengthComponent.name,\n  gmfMobileMeasurePointComponent.name,\n  ngeoMiscBtnComponent.name,\n]);\n\n\nexports.module.value(\n  'gmfRasterUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/raster');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @constructor\n * @ngInject\n */\nexports.MainController = function(gmfPermalink) {\n\n  const center = gmfPermalink.getMapCenter() || [537635, 152640];\n  const zoom = gmfPermalink.getMapZoom() || 3;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: EPSG21781,\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: center,\n      zoom: zoom\n    })\n  });\n\n  this.map.addControl(new olControlScaleLine());\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {Object.<string, gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @export\n   */\n  this.measurePointLayersConfig = {\n    'aster': {unit: 'm', decimals: 2},\n    'srtm': {unit: 'm'}\n  };\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/mobilemeasure.js","/**\n * @module gmf.mobile.measure.lengthComponent\n */\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoInteractionMeasureLengthMobile from 'ngeo/interaction/MeasureLengthMobile.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olEvents from 'ol/events.js';\nimport olObject from 'ol/Object.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('gmfMobileMeasureLength', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.value('gmfMobileMeasureLengthTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} The template url.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasureLengthTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/measure/lengthComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/measure/lengthComponent', require('./lengthComponent.html'));\n});\n\n\n/**\n * Provide a directive to do a length measure on the mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurelength\n *        gmf-mobile-measurelength-active=\"ctrl.measureLengthActive\"\n *        gmf-mobile-measurelength-map=\"::ctrl.map\">\n *      </div>\n *\n * @htmlAttribute {boolean} gmf-mobile-measurelength-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurelength-precision the number of significant digits to display.\n * @htmlAttribute {ol.Map} gmf-mobile-measurelength-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurelength-sketchstyle A style for the measure length.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasureLengthTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasureLength\n */\nexports.component_ =\n    function(gmfMobileMeasureLengthTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurelengthActive',\n          'precision': '<?gmfMobileMeasurelengthPrecision',\n          'map': '=gmfMobileMeasurelengthMap',\n          'sketchStyle': '=?gmfMobileMeasurelengthSketchstyle'\n        },\n        controller: 'GmfMobileMeasureLengthController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasureLengthTemplateUrl,\n        /**\n         * @param {angular.Scope} scope Scope.\n         * @param {angular.JQLite} element Element.\n         * @param {angular.Attributes} attrs Attributes.\n         * @param {gmf.mobile.measure.lengthComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurelength',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$filter} $filter Angular filter\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasureLengthController\n */\nexports.Controller_ = function($scope, $filter) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  this.scope_.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n  });\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.precision;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle = new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 255, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: 'rgba(0, 0, 0, 0.5)',\n      lineDash: [10, 10],\n      width: 2\n    }),\n    image: new olStyleRegularShape({\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.7)',\n        width: 2\n      }),\n      points: 4,\n      radius: 8,\n      radius2: 0,\n      angle: 0\n    })\n  });\n\n  /**\n   * @type {ngeo.interaction.MeasureLengthMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawing = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.valid = false;\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n\n  this.measure = new ngeoInteractionMeasureLengthMobile(this.filter_('ngeoUnitPrefix'), {\n    precision: this.precision,\n    sketchStyle: this.sketchStyle\n  });\n\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n\n\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (\n    this.measure.getDrawInteraction());\n\n  const drawInteraction = this.drawInteraction;\n  ngeoMiscDecorate.interaction(drawInteraction);\n\n  Object.defineProperty(this, 'hasPoints', {\n    get() {\n      return this.drawInteraction.getFeature() !== null;\n    }\n  });\n\n  olEvents.listen(\n    drawInteraction,\n    olObject.getChangeEventType('dirty'),\n    function() {\n      this.dirty = drawInteraction.getDirty();\n\n      // this is where the angular scope is forced to be applied. We\n      // only need to do this when dirty, as going to \"no being dirty\"\n      // is made by a click on a button where Angular is within scope\n      if (this.dirty) {\n        this.scope_.$apply();\n      }\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    olObject.getChangeEventType('drawing'),\n    function() {\n      this.drawing = drawInteraction.getDrawing();\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    olObject.getChangeEventType('valid'),\n    function() {\n      this.valid = drawInteraction.getValid();\n    },\n    this\n  );\n\n  this.map.addInteraction(this.measure);\n};\n\n/**\n * Add current sketch point to line measure\n * @export\n */\nexports.Controller_.prototype.addPoint = function() {\n  this.drawInteraction.addToDrawing();\n};\n\n\n/**\n * Clear the sketch feature\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.drawInteraction.clearDrawing();\n};\n\n\n/**\n * Finish line measure\n * @export\n */\nexports.Controller_.prototype.finish = function() {\n  this.drawInteraction.finishDrawing();\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\nexports.controller('GmfMobileMeasureLengthController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/mobile/measure/lengthComponent.js","/**\n * @module ngeo.interaction.MeasureLengthMobile\n */\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.MeasureLength}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olBase.obj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasureLength.call(this, format, options);\n\n};\n\nolBase.inherits(\n  exports, ngeoInteractionMeasureLength);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    style: style,\n    source: source\n  });\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLengthMobile.js","module.exports = \"<a class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.drawing && (!ctrl.valid)\\\" ng-click=ctrl.addPoint()> <span class=\\\"fa fa-check\\\"></span> {{'Set as starting point' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.dirty ng-click=ctrl.addPoint()> <span class=\\\"fa fa-plus\\\"></span> {{'Add new point' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.drawing && ctrl.valid && !ctrl.dirty\\\" ng-click=ctrl.finish()> <span class=\\\"fa fa-check\\\"></span> {{'Terminate' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.valid ng-click=ctrl.clear()> <span class=\\\"fa fa-repeat\\\"></span> {{'Clear' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.active ng-click=ctrl.deactivate()> <span class=\\\"fa fa-times\\\"></span> {{'Close' | translate}} </a> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contribs/gmf/src/mobile/measure/lengthComponent.html\n// module id = 563\n// module chunks = 2","/**\n * @module gmf.mobile.measure.pointComponent\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasurePointMobile from 'ngeo/interaction/MeasurePointMobile.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('gmfMobileMeasurePoint', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.value('gmfMobileMeasurePointTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} The template url.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasurePointTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/measure/pointComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/measure/pointComponent', require('./pointComponent.html'));\n});\n\n\n/**\n * Provide a directive to do a point (coordinate and elevation) measure on the\n * mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurepoint\n *        gmf-mobile-measurepoint-active=\"ctrl.measurePointActive\"\n *        gmf-mobile-measurepoint-layersconfig=\"::ctrl.measurePointLayers\"\n *        gmf-mobile-measurepoint-map=\"::ctrl.map\">\n *      </div>\n *\n * Where ctrl.measurePointLayers is an object like this:\n *\n *      this.measurePointLayers = [\n *        {name: 'srtm', unit: 'm', decimals: 2},\n *        {name: 'wind', {unit: 'km/h'},\n *        {name: 'humidity'}\n *      ];\n *\n * @htmlAttribute {boolean} gmf-mobile-measurepoint-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurepoint-coordinatedecimals number\n *     of decimal to display for the coordinate.\n * @htmlAttribute {Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n *     gmf-mobile-measurepoint-layersconfig Raster elevation layers to get\n *     information under the point and its configuaration.\n * @htmlAttribute {ol.Map} gmf-mobile-measurepoint-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurepoint-sketchstyle A style for the measure point.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasurePointTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasurePoint\n */\nexports.component_ =\n    function(gmfMobileMeasurePointTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurepointActive',\n          'getCoordinateDecimalsFn': '&?gmfMobileMeasurepointCoordinatedecimals',\n          'getLayersConfigFn': '&gmfMobileMeasurepointLayersconfig',\n          'map': '=gmfMobileMeasurepointMap',\n          'sketchStyle': '=?gmfMobileMeasurepointSketchstyle',\n          'format': '<gmfMobileMeasurepointFormat'\n        },\n        controller: 'GmfMobileMeasurePointController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasurePointTemplateUrl,\n        /**\n         * @param {!angular.Scope} scope Scope.\n         * @param {!angular.JQLite} element Element.\n         * @param {!angular.Attributes} attrs Attributes.\n         * @param {!gmf.mobile.measure.pointComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurepoint',\n  exports.component_);\n\n\n/**\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$filter} $filter Angular filter service.\n * @param {gmf.raster.RasterService} gmfRaster gmf Raster service.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasurePointController\n */\nexports.Controller_ = function(gettextCatalog, $scope, $filter,\n  gmfRaster, ngeoDebounce) {\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  $scope.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n    this.handleMeasureActiveChange_();\n  });\n\n  const coordinateDecimalsFn = this['getCoordinateDecimalsFn'];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.coordinateDecimals = coordinateDecimalsFn ? coordinateDecimalsFn() : 0;\n\n  /**\n   * @type {!Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @private\n   */\n  this.layersConfig;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle;\n\n  if (this.sketchStyle === undefined) {\n    this.sketchStyle = new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      }),\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.5)',\n        lineDash: [10, 10],\n        width: 2\n      }),\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(0, 0, 0, 0.7)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n  }\n\n  /**\n   * @type {string}\n   */\n  this.format;\n\n  /**\n   * @type {ngeo.interaction.MeasurePointMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.measure = new ngeoInteractionMeasurePointMobile(\n    /** @type {ngeox.numberCoordinates} */ (this.$filter_('ngeoNumberCoordinates')),\n    this.format || '{x}, {y}',\n    {\n      decimals: this.coordinateDecimals,\n      sketchStyle: this.sketchStyle\n    }\n  );\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (this.measure.getDrawInteraction());\n  ngeoMiscDecorate.interaction(this.drawInteraction);\n\n  const layersConfig = this['getLayersConfigFn']();\n  googAsserts.assert(Array.isArray(layersConfig));\n  this.layersConfig = layersConfig;\n\n  this.map.addInteraction(this.measure);\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\n/**\n * @param {string} str String to translate.\n * @return {string} The translated text.\n * @export\n */\nexports.Controller_.prototype.translate = function(str) {\n  return this.gettextCatalog_.getString(str);\n};\n\n\n/**\n * Called when the measure becomes active or inactive. Act accordingly:\n * - on activate, listen to the map property changes to call for the elevation\n *   service.\n * - on deactivate, unlisten\n * @private\n */\nexports.Controller_.prototype.handleMeasureActiveChange_ =\n    function() {\n      if (this.measure.getActive()) {\n        const view = this.map.getView();\n        this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n          view,\n          'propertychange',\n          this.ngeoDebounce_(\n            this.getMeasure_.bind(this), 300, /* invokeApply */ true),\n          this);\n        this.getMeasure_();\n      } else if (this.mapViewPropertyChangeEventKey_) {\n        olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n        this.mapViewPropertyChangeEventKey_ = null;\n      }\n    };\n\n\n/**\n * Call the elevation service to get information about the measure at\n * the current map center location.\n * @private\n */\nexports.Controller_.prototype.getMeasure_ = function() {\n  const center = this.map.getView().getCenter();\n  googAsserts.assertArray(center);\n  const params = {\n    'layers': this.layersConfig.map(config => config.name).join(',')\n  };\n  this.gmfRaster_.getRaster(center, params).then((object) => {\n    const el = this.measure.getTooltipElement();\n    const ctn = document.createElement('div');\n    const className = 'gmf-mobile-measure-point';\n    ctn.className = className;\n\n    for (const config of this.layersConfig) {\n      const key = config.name;\n      if (key in object) {\n        let value = object[key];\n        const childEl = document.createElement('div');\n        childEl.className = `gmf-mobile-measure-point-${key}`;\n        const unit = config.unit || '';\n        const decimals = config.decimals && config.decimals > 0 || 0;\n        value = this.$filter_('number')(value, decimals);\n        childEl.innerHTML = [this.translate(key), ': ', value, ' ', unit].join('');\n        ctn.appendChild(childEl);\n      }\n    }\n\n    const previousCtn = el.getElementsByClassName(className);\n    if (previousCtn[0]) {\n      previousCtn[0].remove();\n    }\n    el.appendChild(ctn);\n\n  });\n};\n\n\nexports.controller('GmfMobileMeasurePointController',\n  exports.Controller_);\n\n/**\n * @typedef {{\n *     name: string,\n *     decimals: (number|undefined),\n *     unit: (string|undefined)\n * }}\n */\nexports.LayerConfig;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/mobile/measure/pointComponent.js","/**\n * @module ngeo.interaction.MeasurePointMobile\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure by coordinate (point) on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.numberCoordinates} format the number formatter\n * @param {string} coordFormat the coordinates formatter\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, coordFormat, options = /** @type {ngeox.interaction.MeasureOptions} */ ({})) {\n\n  olObj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */(options));\n\n  /**\n   * @type {ngeox.numberCoordinates}\n   * @private\n   */\n  this.format_ = format;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.coordFormat_ = coordFormat;\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Point'),\n    style: style,\n    source: source\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPoint);\n  const dec = this.decimals;\n  const output = ngeoInteractionMeasure.getFormattedPoint(geom, dec, this.format_, this.coordFormat_);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasurePointMobile.js","module.exports = \"<a class=\\\"btn btn-default\\\" ng-if=ctrl.active ng-click=ctrl.deactivate()> <span class=\\\"fa fa-times\\\"></span> {{'Close' | translate}} </a> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contribs/gmf/src/mobile/measure/pointComponent.html\n// module id = 566\n// module chunks = 2","/**\n * @module ol/control/ScaleLineUnits\n */\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport default {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/control/ScaleLineUnits.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/ScaleLine\n */\nimport {inherits} from '../index.js';\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from '../control/Control.js';\nimport ScaleLineUnits from '../control/ScaleLineUnits.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nconst UNITS = 'units';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @constructor\n * @extends {ol.control.Control}\n * @param {olx.control.ScaleLineOptions=} opt_options Scale line options.\n * @api\n */\nconst ScaleLine = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.innerElement_ = document.createElement('DIV');\n  this.innerElement_.className = className + '-inner';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.element_ = document.createElement('DIV');\n  this.element_.className = className + ' ' + CLASS_UNSELECTABLE;\n  this.element_.appendChild(this.innerElement_);\n\n  /**\n   * @private\n   * @type {?olx.ViewState}\n   */\n  this.viewState_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = false;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderedWidth_ = undefined;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.renderedHTML_ = '';\n\n  Control.call(this, {\n    element: this.element_,\n    render: options.render || render,\n    target: options.target\n  });\n\n  listen(\n    this, BaseObject.getChangeEventType(UNITS),\n    this.handleUnitsChanged_, this);\n\n  this.setUnits(/** @type {ol.control.ScaleLineUnits} */ (options.units) ||\n      ScaleLineUnits.METRIC);\n\n};\n\ninherits(ScaleLine, Control);\n\n\n/**\n * Return the units to use in the scale line.\n * @return {ol.control.ScaleLineUnits|undefined} The units to use in the scale\n *     line.\n * @observable\n * @api\n */\nScaleLine.prototype.getUnits = function() {\n  return /** @type {ol.control.ScaleLineUnits|undefined} */ (this.get(UNITS));\n};\n\n\n/**\n * Update the scale line element.\n * @param {ol.MapEvent} mapEvent Map event.\n * @this {ol.control.ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\n/**\n * @private\n */\nScaleLine.prototype.handleUnitsChanged_ = function() {\n  this.updateElement_();\n};\n\n\n/**\n * Set the units to use in the scale line.\n * @param {ol.control.ScaleLineUnits} units The units to use in the scale line.\n * @observable\n * @api\n */\nScaleLine.prototype.setUnits = function(units) {\n  this.set(UNITS, units);\n};\n\n\n/**\n * @private\n */\nScaleLine.prototype.updateElement_ = function() {\n  const viewState = this.viewState_;\n\n  if (!viewState) {\n    if (this.renderedVisible_) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const center = viewState.center;\n  const projection = viewState.projection;\n  const units = this.getUnits();\n  const pointResolutionUnits = units == ScaleLineUnits.DEGREES ?\n    Units.DEGREES :\n    Units.METERS;\n  let pointResolution =\n      getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n  if (projection.getUnits() != Units.DEGREES && units == ScaleLineUnits.METRIC) {\n    pointResolution *= projection.getMetersPerUnit();\n  }\n\n  let nominalCount = this.minWidth_ * pointResolution;\n  let suffix = '';\n  if (units == ScaleLineUnits.DEGREES) {\n    const metersPerDegree = METERS_PER_UNIT[Units.DEGREES];\n    if (projection.getUnits() == Units.DEGREES) {\n      nominalCount *= metersPerDegree;\n    } else {\n      pointResolution /= metersPerDegree;\n    }\n    if (nominalCount < metersPerDegree / 60) {\n      suffix = '\\u2033'; // seconds\n      pointResolution *= 3600;\n    } else if (nominalCount < metersPerDegree) {\n      suffix = '\\u2032'; // minutes\n      pointResolution *= 60;\n    } else {\n      suffix = '\\u00b0'; // degrees\n    }\n  } else if (units == ScaleLineUnits.IMPERIAL) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution /= 0.0254;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.3048;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.344;\n    }\n  } else if (units == ScaleLineUnits.NAUTICAL) {\n    pointResolution /= 1852;\n    suffix = 'nm';\n  } else if (units == ScaleLineUnits.METRIC) {\n    if (nominalCount < 0.001) {\n      suffix = 'μm';\n      pointResolution *= 1000000;\n    } else if (nominalCount < 1) {\n      suffix = 'mm';\n      pointResolution *= 1000;\n    } else if (nominalCount < 1000) {\n      suffix = 'm';\n    } else {\n      suffix = 'km';\n      pointResolution /= 1000;\n    }\n  } else if (units == ScaleLineUnits.US) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution *= 39.37;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.30480061;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.3472;\n    }\n  } else {\n    assert(false, 33); // Invalid units\n  }\n\n  let i = 3 * Math.floor(\n    Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n  let count, width;\n  while (true) {\n    count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n        Math.pow(10, Math.floor(i / 3));\n    width = Math.round(count / pointResolution);\n    if (isNaN(width)) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n      return;\n    } else if (width >= this.minWidth_) {\n      break;\n    }\n    ++i;\n  }\n\n  const html = count + ' ' + suffix;\n  if (this.renderedHTML_ != html) {\n    this.innerElement_.innerHTML = html;\n    this.renderedHTML_ = html;\n  }\n\n  if (this.renderedWidth_ != width) {\n    this.innerElement_.style.width = width + 'px';\n    this.renderedWidth_ = width;\n  }\n\n  if (!this.renderedVisible_) {\n    this.element_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n};\n\nexport default ScaleLine;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/control/ScaleLine.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = "],"sourceRoot":""}