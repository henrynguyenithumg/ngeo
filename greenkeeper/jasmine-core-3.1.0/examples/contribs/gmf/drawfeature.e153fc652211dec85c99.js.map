{"version":3,"sources":["webpack:///./contribs/gmf/examples/drawfeature.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js"],"names":["__webpack_require__","exports","module","angular","_module2","default","name","_component2","_module4","_FeatureHelper2","_ToolActivateMgr2","value","FormatType","KML","GPX","constant","MainController","$scope","ngeoFeatureHelper","ngeoFeatures","ngeoToolActivateMgr","ngeoFeatureOverlayMgr","_this","this","scope_","view","_View2","center","zoom","setProjection","_asserts2","assert","getProjection","getFeatureOverlay","setFeatures","map","_Map2","layers","_Tile2","source","_OSM2","drawFeatureActive","drawFeatureToolActivate","_ToolActivate2","registerTool","pointerMoveActive","pointerMoveToolActivate","$watch","newVal","on","handleMapPointerMove_","un","$","html","tooltip","container","trigger","prototype","evt","pixel","feature","forEachFeatureAtPixel","get","_FeatureProperties2","NAME","$apply","controller","XYZ","opt_options","options","projection","undefined","tileGrid","Object","tilegrid","extent","maxZoom","minZoom","tileSize","TileImage","call","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","wrapX","transition","ol","source_XYZ","OSM","ATTRIBUTION","__webpack_exports__"],"mappings":"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","file":"drawfeature.e153fc652211dec85c99.js","sourcesContent":["/**\n * @module gmfapp.drawfeature\n */\nconst exports = {};\n\nimport './drawfeature.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfDrawingModule.name,\n  gmfMapComponent.name,\n  ngeoMapModule.name, // for ngeo.map.FeatureOverlay, perhaps remove me\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n *     manager\n * @constructor\n * @ngInject\n */\nexports.MainController = function($scope, ngeoFeatureHelper, ngeoFeatures,\n  ngeoToolActivateMgr, ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  const view = new olView({\n    center: [0, 0],\n    zoom: 3\n  });\n\n  ngeoFeatureHelper.setProjection(googAsserts.assert(view.getProjection()));\n\n  const featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  featureOverlay.setFeatures(ngeoFeatures);\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: view\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = true;\n\n  const drawFeatureToolActivate = new ngeoMiscToolActivate(\n    this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', drawFeatureToolActivate, true);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pointerMoveActive = false;\n\n  const pointerMoveToolActivate = new ngeoMiscToolActivate(\n    this, 'pointerMoveActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', pointerMoveToolActivate, false);\n\n  $scope.$watch(\n    () => this.pointerMoveActive,\n    (newVal) => {\n      if (newVal) {\n        this.map.on('pointermove', this.handleMapPointerMove_, this);\n      } else {\n        this.map.un('pointermove', this.handleMapPointerMove_, this);\n        $('#pointermove-feature').html('');\n      }\n    }\n  );\n\n  // initialize tooltips\n  $('[data-toggle=\"tooltip\"]').tooltip({\n    container: 'body',\n    trigger: 'hover'\n  });\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt MapBrowser event\n * @private\n */\nexports.MainController.prototype.handleMapPointerMove_ = function(evt) {\n  const pixel = evt.pixel;\n\n  const feature = this.map.forEachFeatureAtPixel(pixel, feature => feature);\n\n  $('#pointermove-feature').html(\n    (feature) ? feature.get(ngeoFormatFeatureProperties.NAME) : 'None'\n  );\n\n  this.scope_.$apply();\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/drawfeature.js","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = "],"sourceRoot":""}