{"version":3,"sources":["webpack:///./contribs/gmf/examples/search.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js"],"names":["__webpack_require__","exports","module","angular","_component2","default","name","_module2","_Themes2","_module4","_Notification2","value","constant","MainController","gmfThemes","ngeoFeatureOverlayMgr","ngeoNotification","loadThemes","init","this","map","searchDatasources","groupValues","groupActions","labelKey","projection","bloodhoundOptions","remote","rateLimitWait","url","fill","_Fill2","color","stroke","_Stroke2","width","searchStyles","osm","_Style2","image","_Circle2","radius","searchOptions","minLength","inputValue","_Map2","layers","_Tile2","source","_OSM2","view","_View2","center","zoom","searchIsReady","notify","msg","target","element","type","_Message2","Type","SUCCESS","controller","XYZ","opt_options","options","undefined","tileGrid","Object","tilegrid","extent","maxZoom","minZoom","tileSize","TileImage","call","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","ol","source_XYZ","OSM","ATTRIBUTION","__webpack_exports__"],"mappings":"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","file":"search.3379bf86a1ad41199c80.js","sourcesContent":["/**\n * @module gmfapp.search\n */\nconst exports = {};\n\nimport './search.css';\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport EPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  'gettext',\n  gmfMapComponent.name,\n  gmfSearchModule.name,\n  gmfThemeThemes.module.name,\n  ngeoMapModule.name, // for ngeo.map.FeatureOverlay, perhaps remove me\n  ngeoMessageNotification.module.name,\n]);\n\nexports.module.value('gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?version=2&background=background');\n\nexports.module.value('fulltextsearchUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/fulltextsearch?limit=30&partitionlimit=5&interface=desktop');\n\nexports.module.value('gmfLayersUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/layers/');\n\nexports.module.constant('defaultTheme', 'Demo');\nexports.module.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature overlay manager service.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @constructor\n * @ngInject\n */\nexports.MainController = function(gmfThemes, ngeoFeatureOverlayMgr, ngeoNotification) {\n\n  gmfThemes.loadThemes();\n\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    groupValues: ['osm', 'district'],\n    groupActions: [],\n    labelKey: 'label',\n    projection: EPSG21781,\n    bloodhoundOptions: {\n      remote: {\n        rateLimitWait: 250\n      }\n    },\n    url: 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/fulltextsearch'\n  }];\n\n  const fill = new olStyleFill({color: [255, 255, 255, 0.6]});\n  const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n  /**\n   * @type {Object.<string, ol.style.Style>} Map of styles for search overlay.\n   * @export\n   */\n  this.searchStyles = {\n    'osm': new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    })\n  };\n\n  /**\n   * @type {TypeaheadOptions}\n   * @export\n   */\n  this.searchOptions = {\n    minLength: 2\n  };\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.inputValue = '';\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 4\n    })\n  });\n\n  /**\n   * @type {function()}\n   * @export\n   */\n  this.searchIsReady = () => {\n    ngeoNotification.notify({\n      msg: 'gmf-search initialized',\n      target: angular.element('#message'),\n      type: ngeoMessageMessage.Type.SUCCESS\n    });\n  };\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/search.js","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = "],"sourceRoot":""}