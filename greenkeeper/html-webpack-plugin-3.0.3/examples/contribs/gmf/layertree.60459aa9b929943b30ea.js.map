{"version":3,"sources":["webpack:///./contribs/gmf/examples/layertree.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js"],"names":["__webpack_require__","exports","module","angular","_component2","default","name","_TreeManager2","_component4","_Manager2","_Themes2","_Location2","_module4","_module2","value","constant","MainController","gmfTreeManager","gmfThemes","gmfThemeManager","ngeoLocation","_this","this","loadThemes","map","_Map2","layers","_Tile2","source","_OSM2","view","_View2","projection","resolutions","center","zoom","modal","getParam","themes","groups","getSetTheme","addTheme","getSetGroup","undefined","setFirstLevelGroups","getSetLayers","addGroupByLayerName","getSetRemoveTree","removeGroup","root","children","getThemesObject","then","flatNodes","forEach","theme","group","push","getDistinctFlatNodes_","node","nodes","i","length","alreadyAdded","some","n","id","controller","XYZ","opt_options","options","tileGrid","Object","tilegrid","extent","maxZoom","minZoom","tileSize","TileImage","call","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","wrapX","transition","ol","source_XYZ","OSM","ATTRIBUTION","__webpack_exports__"],"mappings":"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","file":"layertree.60459aa9b929943b30ea.js","sourcesContent":["/**\n * @module gmfapp.layertree\n */\nconst exports = {};\n\nimport './layertree.css';\nimport gmfDisclaimerModule from 'gmf/disclaimer/module.js';\n\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport EPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoLayertreeModule from 'ngeo/layertree/module.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  'gettext',\n  gmfLayertreeComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfMapComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerLocation.module.name,\n  ngeoLayertreeModule.name,\n  gmfDisclaimerModule.name,\n]);\n\n\nexports.module.value('gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?version=2&background=background&interface=desktop');\n\nexports.module.constant('defaultTheme', 'Demo');\nexports.module.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @param {gmf.theme.Manager} gmfThemeManager gmf Theme Manager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n */\nexports.MainController = function(gmfTreeManager, gmfThemes, gmfThemeManager, ngeoLocation) {\n\n  gmfThemes.loadThemes();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: EPSG21781,\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 3\n    })\n  });\n\n  // How should disclaimer message be displayed: in modals or alerts\n  const modal = ngeoLocation.getParam('modal');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modal = modal === 'true';\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @export\n   */\n  this.gmfTreeManager = gmfTreeManager;\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {Array.<gmfThemes.GmfTheme>}\n   * @export\n   */\n  this.themes = [];\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @export\n   */\n  this.groups = [];\n\n  /**\n   * @type {Array.<gmfThemes.GmfLayer>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @param {gmfThemes.GmfTheme|undefined} value A theme or undefined to get Themes.\n   * @return {Array.<gmfThemes.GmfTheme>} All themes.\n   * @export\n   */\n  this.getSetTheme = function(value) {\n    if (value) {\n      this.gmfThemeManager.addTheme(value);\n    }\n    return this.themes;\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|undefined} value A group or undefined to get groups.\n   * @return {Array.<gmfThemes.GmfGroup>} All groups in all themes.\n   * @export\n   */\n  this.getSetGroup = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.setFirstLevelGroups([value]);\n    }\n    return this.groups;\n  };\n\n  /**\n   * @param {gmfThemes.GmfLayer|undefined} value A group or undefined to get groups.\n   * @return {Array.<gmfThemes.GmfLayer>} All groups in all themes.\n   * @export\n   */\n  this.getSetLayers = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.addGroupByLayerName(value.name);\n    }\n    return this.layers;\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|undefined} value A GeoMapFish group, or undefined\n   *     to get the groups of the tree manager.\n   * @return {Array.<gmfThemes.GmfGroup>} All groups in the tree manager.\n   * @export\n   */\n  this.getSetRemoveTree = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.removeGroup(value);\n    }\n    return this.gmfTreeManager.root.children;\n  };\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (themes) {\n      this.themes = themes;\n\n      // Get an array with all nodes entities existing in \"themes\".\n      const flatNodes = [];\n      this.themes.forEach((theme) => {\n        theme.children.forEach((group) => {\n          this.groups.push(group); // get a list of all groups\n          this.getDistinctFlatNodes_(group, flatNodes);\n        });\n      });\n      flatNodes.forEach((node) => {\n        // Get an array of all layers\n        if (node.children === undefined) {\n          this.layers.push(node);\n        }\n      });\n    }\n  });\n\n  /**\n   * Just for this example\n   * @param {gmfThemes.GmfTheme|gmfThemes.GmfGroup|gmfThemes.GmfLayer} node A theme, group or layer node.\n   * @param {Array.<gmfThemes.GmfTheme|gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An Array of nodes.\n   * @export\n   */\n  this.getDistinctFlatNodes_ = function(node, nodes) {\n    let i;\n    const children = node.children;\n    if (children !== undefined) {\n      for (i = 0; i < children.length; i++) {\n        this.getDistinctFlatNodes_(children[i], nodes);\n      }\n    }\n    let alreadyAdded = false;\n    nodes.some((n) => {\n      if (n.id === node.id) {\n        return alreadyAdded = true;\n      }\n    });\n    if (!alreadyAdded) {\n      nodes.push(node);\n    }\n  };\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/layertree.js","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = "],"sourceRoot":""}