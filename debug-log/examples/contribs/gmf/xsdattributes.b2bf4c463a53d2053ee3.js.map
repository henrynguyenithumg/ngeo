{"version":3,"sources":["webpack:///./contribs/gmf/examples/xsdattributes.js"],"names":["__webpack_require__","exports","module","angular","_XSDAttributes2","default","name","_Themes2","_attributesComponent2","value","constant","MainController","$timeout","gmfThemes","gmfXSDAttributes","_this","this","timeout_","xsdAttributes_","attributes","feature","layers","layerNames","loadThemes","getThemesObject","then","themes","flatNodes","forEach","theme","children","group","getDistinctFlatNodes_","node","undefined","indexOf","push","prototype","getSetLayers","getAttributes","id","setAttributes_","bind","_this2","_Feature2","getGeomType","type","geomAttr","_XSDAttribute2","getGeometryAttribute","geomType","nodes","i","length","alreadyAdded","some","n","controller"],"mappings":"uJAKAA,EAAA,KACA,QAAAA,EAAA,SAEAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,wDARA,IAAMC,KAYNA,EAAQC,OAASC,QAAQD,OAAO,UAC9B,UACAE,EAAAC,QAAwBH,OAAOI,KAC/BC,EAAAF,QAAeH,OAAOI,KACtBE,EAAAH,QAA+BC,OAIjCL,EAAQC,OAAOO,MAAM,aACnB,0FAEFR,EAAQC,OAAOO,MAAM,eACnB,2DAEFR,EAAQC,OAAOQ,SAAS,sBAAuB,yCAU/CT,EAAQU,eAAiB,SAASC,EAAUC,EAAWC,GAAkB,IAAAC,EAAAC,KAMvEA,KAAKC,SAAWL,EAMhBI,KAAKE,eAAiBJ,EAMtBE,KAAKG,WAAa,KAMlBH,KAAKI,QAAU,KAMfJ,KAAKK,UAIL,IAAMC,GAAc,OAAQ,QAAS,WAErCT,EAAUU,aAEVV,EAAUW,kBAAkBC,KAAK,SAACC,GAChC,GAAKA,EAAL,CAIA,IAAMC,KACND,EAAOE,QAAQ,SAACC,GACdA,EAAMC,SAASF,QAAQ,SAACG,GACtBhB,EAAKiB,sBAAsBD,EAAOJ,OAGtCA,EAAUC,QAAQ,SAACK,QAEKC,IAAlBD,EAAKH,WAA6D,IAAnCR,EAAWa,QAAQF,EAAK3B,OACzDS,EAAKM,OAAOe,KAAKH,SApDzBhC,EAAQU,mEAiERV,EAAQU,eAAe0B,UAAUC,aAAe,SAAS7B,GAKvD,YAJcyB,IAAVzB,GACFO,KAAKE,eAAeqB,cAAc9B,EAAM+B,IAAIf,KAC1CT,KAAKyB,eAAeC,KAAK1B,OAEtBA,KAAKK,QAQdpB,EAAQU,eAAe0B,UAAUI,eAAiB,SAAStB,GAAY,IAAAwB,EAAA3B,KAGrEA,KAAKI,QAAU,KACfJ,KAAKG,WAAa,KAGlBH,KAAKC,SAAS,WACZ0B,EAAKvB,QAAU,IAAAwB,EAAAvC,QACfsC,EAAKxB,WAAaA,GACjB,IAQLlB,EAAQU,eAAe0B,UAAUQ,YAAc,WAC7C,IAAIC,EAAO,MACX,GAAI9B,KAAKG,WAAY,CACnB,IAAM4B,EAAWC,EAAA3C,QAAuB4C,qBACtCjC,KAAKG,YAEH4B,GAAYA,EAASG,WACvBJ,EAAOC,EAASG,UAGpB,OAAOJ,GAUT7C,EAAQU,eAAe0B,UAAUL,sBAAwB,SAASC,EAAMkB,GACtE,IAAIC,SACEtB,EAAWG,EAAKH,SACtB,QAAiBI,IAAbJ,EACF,IAAKsB,EAAI,EAAGA,EAAItB,EAASuB,OAAQD,IAC/BpC,KAAKgB,sBAAsBF,EAASsB,GAAID,GAG5C,IAAIG,GAAe,EACnBH,EAAMI,KAAK,SAACC,GACV,GAAIA,EAAEhB,KAAOP,EAAKO,GAChB,OAAOc,GAAe,IAGrBA,GACHH,EAAMf,KAAKH,IAKfhC,EAAQC,OAAOuD,WAAW,iBAAkBxD,EAAQU,0BAGrCV","file":"xsdattributes.b2bf4c463a53d2053ee3.js","sourcesContent":["/**\n * @module gmfapp.xsdattributes\n */\nconst exports = {};\n\nimport './xsdattributes.css';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\nimport olFeature from 'ol/Feature.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  'gettext',\n  gmfEditingXSDAttributes.module.name,\n  gmfThemeThemes.module.name,\n  ngeoEditingAttributesComponent.name,\n]);\n\n\nexports.module.value('gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?version=2&background=background');\n\nexports.module.value('gmfLayersUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/layers/');\n\nexports.module.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @param {gmf.editing.XSDAttributes} gmfXSDAttributes The gmf XSDAttributes service.\n * @constructor\n * @ngInject\n */\nexports.MainController = function($timeout, gmfThemes, gmfXSDAttributes) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.editing.XSDAttributes}\n   * @private\n   */\n  this.xsdAttributes_ = gmfXSDAttributes;\n\n  /**\n   * @type {?Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {Array.<gmfThemes.GmfLayer>}\n   * @export\n   */\n  this.layers = [];\n\n  // TMP - The list of layer names to use. We'll keep this until we can use\n  //       those that are editable.\n  const layerNames = ['line', 'point', 'polygon'];\n\n  gmfThemes.loadThemes();\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (!themes) {\n      return;\n    }\n    // Get an array with all nodes entities existing in \"themes\".\n    const flatNodes = [];\n    themes.forEach((theme) => {\n      theme.children.forEach((group) => {\n        this.getDistinctFlatNodes_(group, flatNodes);\n      });\n    });\n    flatNodes.forEach((node) => {\n      // Get an array of all layers\n      if (node.children === undefined && layerNames.indexOf(node.name) !== -1) {\n        this.layers.push(node);\n      }\n    });\n\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfLayer|undefined} value A layer or undefined to get layers.\n * @return {Array.<gmfThemes.GmfLayer>} All layers in all themes.\n * @export\n */\nexports.MainController.prototype.getSetLayers = function(value) {\n  if (value !== undefined) {\n    this.xsdAttributes_.getAttributes(value.id).then(\n      this.setAttributes_.bind(this));\n  }\n  return this.layers;\n};\n\n\n/**\n * @param {Array.<ngeox.Attribute>} attributes Attributes.\n * @export\n */\nexports.MainController.prototype.setAttributes_ = function(attributes) {\n\n  // (1) Reset first\n  this.feature = null;\n  this.attributes = null;\n\n  // (2) Then set\n  this.timeout_(() => {\n    this.feature = new olFeature();\n    this.attributes = attributes;\n  }, 0);\n};\n\n\n/**\n * @return {string} Type of geometry.\n * @export\n */\nexports.MainController.prototype.getGeomType = function() {\n  let type = 'N/A';\n  if (this.attributes) {\n    const geomAttr = ngeoFormatXSDAttribute.getGeometryAttribute(\n      this.attributes\n    );\n    if (geomAttr && geomAttr.geomType) {\n      type = geomAttr.geomType;\n    }\n  }\n  return type;\n};\n\n\n/**\n * Just for this example\n * @param {gmfThemes.GmfTheme|gmfThemes.GmfGroup|gmfThemes.GmfLayer} node A theme, group or layer node.\n * @param {Array.<gmfThemes.GmfTheme|gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An Array of nodes.\n * @export\n */\nexports.MainController.prototype.getDistinctFlatNodes_ = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      this.getDistinctFlatNodes_(children[i], nodes);\n    }\n  }\n  let alreadyAdded = false;\n  nodes.some((n) => {\n    if (n.id === node.id) {\n      return alreadyAdded = true;\n    }\n  });\n  if (!alreadyAdded) {\n    nodes.push(node);\n  }\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/xsdattributes.js"],"sourceRoot":""}