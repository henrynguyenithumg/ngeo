!function(e){function t(t){for(var o,a,i=t[0],s=t[1],u=t[2],d=0,g=[];d<i.length;d++)a=i[d],n[a]&&g.push(n[a][0]),n[a]=0;for(o in s)Object.prototype.hasOwnProperty.call(s,o)&&(e[o]=s[o]);for(c&&c(t);g.length;)g.shift()();return l.push.apply(l,u||[]),r()}function r(){for(var e,t=0;t<l.length;t++){for(var r=l[t],o=!0,i=1;i<r.length;i++){var s=r[i];0!==n[s]&&(o=!1)}o&&(l.splice(t--,1),e=a(a.s=r[0]))}return e}var o={},n={25:0},l=[];function a(t){if(o[t])return o[t].exports;var r=o[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,a),r.l=!0,r.exports}a.m=e,a.c=o,a.d=function(e,t,r){a.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},a.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var i=window.webpackJsonp=window.webpackJsonp||[],s=i.push.bind(i);i.push=t,i=i.slice();for(var u=0;u<i.length;u++)t(i[u]);var c=s;l.push([442,0]),r()}({439:function(e,t){e.exports='<div class="gmf-displayquerygrid panel" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class="nav nav-pills small" role=tablist> <li ng-repeat="gridSource in ctrl.getGridSources() track by gridSource.source.label" role=presentation ng-class="{\'active\' : ctrl.isSelected(gridSource)}" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if="gridSource.source.tooManyResults !== true"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if="gridSource.source.tooManyResults === true"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat="gridSource in ctrl.getGridSources() track by gridSource.source.label" role=tabpanel class=tab-pane ng-class="{\'active\' : ctrl.isSelected(gridSource)}" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if="gridSource.source.tooManyResults !== true"> </ngeo-grid> <div ng-if="gridSource.source.tooManyResults === true"> <div class="gmf-displayquerygrid-message alert alert-warning"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show="!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null"> <ul class="nav navbar-nav navbar-right"> <li class="small ng-hide" ng-show=ctrl.isOneSelected()> <p class="navbar-text ng-binding"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class="btn btn-link btn-xs" title="{{\'Zoom to selection\' | translate}}" ng-click=ctrl.zoomToSelection()> <i class="fa fa-search-plus"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class="btn btn-link btn-xs" title="{{\'Export selection as CSV\' | translate}}" ng-click=ctrl.downloadCsv()> <i class="fa fa-download"></i> <span translate>Export as CSV</span> </button> </li> <li class="dropdown navbar-link dropup"> <button type=button class="dropup btn btn-default btn-xs" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href="" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href="" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href="" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class="fa fa-spinner fa-spin"></span> </div> </div> '},440:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=v(r(13)),n=v(r(262)),l=v(r(238)),a=v(r(296)),i=v(r(295)),s=v(r(138)),u=v(r(179)),c=v(r(28)),d=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(2)),g=v(r(52)),f=v(r(106)),p=v(r(58)),h=v(r(56)),m=v(r(38));function v(e){return e&&e.__esModule?e:{default:e}}var y=angular.module("gmfQueryGridComponent",[n.default.module.name,l.default.name,a.default.name,i.default.module.name,s.default.module.name,u.default.module.name]);function _(e,t,r){return r(e,t)}y.value("gmfDisplayquerygridTemplateUrl",function(e,t){var r=t.gmfDisplayquerygridTemplateurl;return void 0!==r?r:"gmf/query/gridComponent"}),y.run(["$templateCache",function(e){e.put("gmf/query/gridComponent",r(439))}]),_.$inject=["$element","$attrs","gmfDisplayquerygridTemplateUrl"],y.component_={controller:"GmfDisplayquerygridController as ctrl",bindings:{active:"=?gmfDisplayquerygridActive",featuresStyleFn:"&gmfDisplayquerygridFeaturesstyle",selectedFeatureStyleFn:"&gmfDisplayquerygridSelectedfeaturestyle",getMapFn:"&gmfDisplayquerygridMap",removeEmptyColumnsFn:"&?gmfDisplayquerygridRemoveemptycolumns",maxResultsFn:"&?gmfDisplayquerygridMaxresults",maxRecenterZoomFn:"&?gmfDisplayquerygridMaxrecenterzoom",mergeTabs:"<?gmfDisplayquerygridMergetabs"},templateUrl:_},y.component("gmfDisplayquerygrid",y.component_),y.Controller_=function(e,t,r,o,n,l,a,i){var s=this,u=e.has("ngeoQueryOptions")?e.get("ngeoQueryOptions"):{};this.$scope_=t,this.$timeout_=l,this.ngeoQueryResult=r,this.ngeoMapQuerent_=o,this.ngeoCsvDownload_=a,this.$element_=i,this.maxResults=void 0!==u.limit?u.limit:50,this.active=!1,this.pending=!1,this.gridSources={},this.loadedGridSources=[],this.selectedTab=null,this.removeEmptyColumns_=!1,this.maxRecenterZoom,this.mergeTabs={},this.featuresForSources_={},this.features_=new c.default,this.ngeoFeatureOverlayMgr_=n,this.highlightFeatures_=new c.default,this.filename_=e.has("gmfCsvFilename")?e.get("gmfCsvFilename"):"query-results.csv",this.map_=null,this.$scope_.$watchCollection(function(){return r},function(e,t){e!==t&&s.updateData_()}),this.unregisterSelectWatcher_=null},y.Controller_.$inject=["$injector","$scope","ngeoQueryResult","ngeoMapQuerent","ngeoFeatureOverlayMgr","$timeout","ngeoCsvDownload","$element"],y.Controller_.prototype.$onInit=function(){this.removeEmptyColumns_=!!this.removeEmptyColumnsFn&&!0===this.removeEmptyColumnsFn(),this.maxRecenterZoom=this.maxRecenterZoomFn?this.maxRecenterZoomFn():void 0;var e=this.ngeoFeatureOverlayMgr_.getFeatureOverlay();e.setFeatures(this.features_);var t=this.featuresStyleFn();void 0!==t&&(o.default.assertInstanceof(t,m.default),e.setStyle(t));var r=this.ngeoFeatureOverlayMgr_.getFeatureOverlay();r.setFeatures(this.highlightFeatures_);var n=this.selectedFeatureStyleFn();if(void 0!==n)o.default.assertInstanceof(n,m.default);else{var l=new p.default({color:[255,0,0,.6]}),a=new h.default({color:[255,0,0,1],width:2});n=new m.default({fill:l,image:new f.default({fill:l,radius:5,stroke:a}),stroke:a,zIndex:10})}r.setStyle(n);var i=this.getMapFn;if(i){var s=i();o.default.assertInstanceof(s,g.default),this.map_=s}},y.Controller_.prototype.getGridSources=function(){var e=this;return this.loadedGridSources.map(function(t){return e.gridSources[t]})},y.Controller_.prototype.updateData_=function(){var e=this;if(0===this.ngeoQueryResult.total&&!this.hasOneWithTooManyResults_()){var t=this.active;return this.clear(),void(t&&(this.active=this.ngeoQueryResult.pending,this.pending=this.ngeoQueryResult.pending))}this.active=!0,this.pending=!1;var r=this.ngeoQueryResult.sources;Object.keys(this.mergeTabs).length>0&&(r=this.getMergedSources_(r)),r.forEach(function(t){t.tooManyResults?e.makeGrid_(null,t):(t.id=e.escapeValue(t.id),t.features.length>0&&e.collectData_(t))}),0!==this.loadedGridSources.length?null!==this.selectedTab&&""+this.selectedTab in this.gridSources||this.$timeout_(function(){var t=e.loadedGridSources[0];e.selectTab(e.gridSources[t])},0):this.active=!1},y.Controller_.prototype.hasOneWithTooManyResults_=function(){return this.ngeoQueryResult.sources.some(function(e){return e.tooManyResults})},y.Controller_.prototype.escapeValue=function(e){if(Number.isInteger(e))return e;var t=/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\ |]/g;return null!==e.match(t)?e.replace(t,"_"):e},y.Controller_.prototype.isSelected=function(e){return this.selectedTab===e.source.label},y.Controller_.prototype.getMergedSources_=function(e){var t=this,r=[],o={};for(var n in e.forEach(function(e){null===t.getMergedSource_(e,o)&&r.push(e)}),o)r.push(o[n]);return r},y.Controller_.prototype.getMergedSource_=function(e,t){var r=null;for(var o in this.mergeTabs){if(this.mergeTabs[o].some(function(t){return t==e.label})){r=o;break}}if(null===r)return null;var n=void 0;return r in t?n=t[r]:(n={features:[],id:r,label:r,limit:this.maxResults,pending:!1,queried:!0,tooManyResults:!1,totalFeatureCount:void 0},t[r]=n),e.features.forEach(function(e){n.features.push(e)}),n.tooManyResults=n.tooManyResults||e.tooManyResults,n.tooManyResults&&(n.totalFeatureCount=void 0!==n.totalFeatureCount?n.totalFeatureCount+n.features.length:n.features.length,n.features=[]),void 0!==e.totalFeatureCount&&(n.totalFeatureCount=void 0!==n.totalFeatureCount?n.totalFeatureCount+e.totalFeatureCount:e.totalFeatureCount),n},y.Controller_.prototype.collectData_=function(e){var t=[],r=[],o={},n=void 0,l=void 0;(e.features.forEach(function(e){void 0!==(n=e.getProperties())&&(l=e.getGeometryName(),-1===r.indexOf(l)&&r.push(l),t.push(n),o[i.default.getRowUid(n)]=e)}),this.cleanProperties_(t,r),t.length>0)&&(this.makeGrid_(t,e)&&(this.featuresForSources_[""+e.label]=o))},y.Controller_.prototype.cleanProperties_=function(e,t){e.forEach(function(e){t.forEach(function(t){delete e[t]}),delete e.boundedBy,delete e.ngeo_feature_type_}),!0===this.removeEmptyColumns_&&this.removeEmptyColumnsFn_(e)},y.Controller_.prototype.removeEmptyColumnsFn_=function(e){var t=[],r=void 0,o=void 0;for(o in e[0])for(r=0;r<e.length;r++)if(void 0!==e[r][o]){t.push(o);break}var n=void 0;e.forEach(function(e){for(o in n=[],e)-1===t.indexOf(o)&&n.push(o);n.forEach(function(t){delete e[t]})})},y.Controller_.prototype.makeGrid_=function(e,t){var r=""+t.label,o=null;return(null===e||null!==(o=this.getGridConfiguration_(e)))&&(-1==this.loadedGridSources.indexOf(r)&&this.loadedGridSources.push(r),this.gridSources[r]={configuration:o,source:t},!0)},y.Controller_.prototype.getGridConfiguration_=function(e){o.default.assert(e.length>0);var t={};Object.assign(t,e[0]),delete t.ol_uid;var r=[];return Object.keys(t).forEach(function(e){r.push({name:e})}),r.length>0?new i.default(e,r):null},y.Controller_.prototype.clear=function(){this.active=!1,this.pending=!1,this.gridSources={},this.loadedGridSources=[],this.selectedTab=null,this.tooManyResults=!1,this.features_.clear(),this.highlightFeatures_.clear(),this.ngeoMapQuerent_.clear(),this.featuresForSources_={},this.unregisterSelectWatcher_&&this.unregisterSelectWatcher_()},y.Controller_.prototype.selectTab=function(e){var t=this,r=e.source;this.selectedTab=r.label,this.unregisterSelectWatcher_&&(this.unregisterSelectWatcher_(),this.unregisterSelectWatcher_=null),null!==e.configuration&&(this.unregisterSelectWatcher_=this.$scope_.$watchCollection(function(){return e.configuration.selectedRows},function(e,r){Object.keys(e)!==Object.keys(r)&&t.onSelectionChanged_()})),this.updateFeatures_(e),this.reflowGrid_()},y.Controller_.prototype.reflowGrid_=function(){var e=this.escapeValue(this.selectedTab||""),t=this.$element_.find("div.tab-pane#"+e);t.removeClass("active").addClass("active"),this.$timeout_(function(){t.find("div.ngeo-grid-table-container table").trigger("reflow")})},y.Controller_.prototype.onSelectionChanged_=function(){if(null!==this.selectedTab){var e=this.gridSources[""+this.selectedTab];this.updateFeatures_(e)}},y.Controller_.prototype.updateFeatures_=function(e){if(this.features_.clear(),this.highlightFeatures_.clear(),null!==e.configuration){var t=""+e.source.label,r=this.featuresForSources_[t],o=e.configuration.selectedRows;for(var n in r){var l=r[n];n in o?this.highlightFeatures_.push(l):this.features_.push(l)}}},y.Controller_.prototype.getActiveGridSource=function(){return null===this.selectedTab?null:this.gridSources[""+this.selectedTab]},y.Controller_.prototype.isOneSelected=function(){var e=this.getActiveGridSource();return null!==e&&null!==e.configuration&&e.configuration.getSelectedCount()>0},y.Controller_.prototype.getSelectedRowCount=function(){var e=this.getActiveGridSource();return null===e||null===e.configuration?0:e.configuration.getSelectedCount()},y.Controller_.prototype.selectAll=function(){var e=this.getActiveGridSource();null!==e&&e.configuration.selectAll()},y.Controller_.prototype.unselectAll=function(){var e=this.getActiveGridSource();null!==e&&e.configuration.unselectAll()},y.Controller_.prototype.invertSelection=function(){var e=this.getActiveGridSource();null!==e&&e.configuration.invertSelection()},y.Controller_.prototype.zoomToSelection=function(){if(null!==this.getActiveGridSource()){var e=d.createEmpty();this.highlightFeatures_.forEach(function(t){d.extend(e,t.getGeometry().getExtent())});var t=this.map_.getSize();o.default.assert(void 0!==t);var r=this.maxRecenterZoom;this.map_.getView().fit(e,{size:t,maxZoom:r})}},y.Controller_.prototype.downloadCsv=function(){var e=this.getActiveGridSource();if(null!==e){var t=e.configuration.columnDefs;o.default.assert(void 0!==t);var r=e.configuration.getSelectedRows();this.ngeoCsvDownload_.startDownload(r,t,this.filename_)}},y.controller("GmfDisplayquerygridController",y.Controller_),t.default=y},441:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),r(615);var o=C(r(214)),n=C(r(137)),l=C(r(70)),a=C(r(440)),i=C(r(57)),s=C(r(297)),u=C(r(178)),c=C(r(164)),d=C(r(83)),g=C(r(205)),f=C(r(206)),p=C(r(52)),h=C(r(61)),m=C(r(49)),v=C(r(79)),y=C(r(106)),_=C(r(58)),b=C(r(56)),S=C(r(38));function C(e){return e&&e.__esModule?e:{default:e}}var w={};w.module=angular.module("gmfapp",["gettext",o.default.module.name,n.default.name,l.default.name,a.default.name,i.default.module.name,s.default.name,u.default.name,c.default.name,g.default.name,f.default.name]),w.module.constant("ngeoQueryOptions",{limit:20,queryCountFirst:!0}),w.module.constant("gmfTreeUrl","https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?version=2&background=background"),w.module.constant("defaultTheme","Demo"),w.module.constant("angularLocaleScript","../build/angular-locale_{{locale}}.js"),w.queryresultComponent={controller:"gmfappQueryresultController",template:r(293)},w.module.component("gmfappQueryresult",w.queryresultComponent),w.QueryresultController=function(e){this.result=e},w.QueryresultController.$inject=["ngeoQueryResult"],w.module.controller("gmfappQueryresultController",w.QueryresultController),w.MainController=function(e,t,r){var o=this;e.loadThemes();var n=new _.default({color:[255,170,0,.6]}),l=new b.default({color:[255,170,0,1],width:2});this.featureStyle=new S.default({fill:n,image:new y.default({fill:n,radius:5,stroke:l}),stroke:l}),this.map=new p.default({layers:[new m.default({source:new v.default})],view:new h.default({projection:d.default,resolutions:[200,100,50,20,10,5,2.5,2,1,.5],center:[537635,152640],zoom:3})}),t.setDatasourceMap(this.map),this.themes=void 0,this.treeSource=void 0,this.queryActive=!0,this.queryGridActive=!0,e.getThemesObject().then(function(e){e&&(o.themes=e,o.treeSource=e[3])}),r.init(this.map)},w.MainController.$inject=["gmfThemes","gmfDataSourcesManager","ngeoFeatureOverlayMgr"],w.module.controller("MainController",w.MainController),t.default=w},442:function(e,t,r){r(54),r(53),e.exports=r(441)},615:function(e,t){}});
//# sourceMappingURL=displayquerygrid.343a5ff3afed653d3c92.js.map